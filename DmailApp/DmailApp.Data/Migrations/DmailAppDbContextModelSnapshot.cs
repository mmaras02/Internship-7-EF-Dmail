// <auto-generated />
using System;
using DmailApp.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DmailApp.Data.Migrations
{
    [DbContext(typeof(DmailAppDbContext))]
    partial class DmailAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mail", b =>
                {
                    b.Property<int>("MailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MailId"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<TimeSpan?>("EventDuration")
                        .HasColumnType("interval");

                    b.Property<DateTime?>("EventTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("MailType")
                        .HasColumnType("integer");

                    b.Property<int>("SenderId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TimeOfSending")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mail_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MailId");

                    b.HasIndex("SenderId");

                    b.ToTable("Mails", (string)null);

                    b.HasDiscriminator<string>("mail_type").HasValue("mail");

                    b.HasData(
                        new
                        {
                            MailId = 1,
                            Content = "Write your review for your stay!",
                            MailType = 0,
                            SenderId = 1,
                            TimeOfSending = new DateTime(2022, 3, 13, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Airbnb"
                        },
                        new
                        {
                            MailId = 2,
                            Content = "Here are the notes i took today!",
                            MailType = 0,
                            SenderId = 4,
                            TimeOfSending = new DateTime(2022, 10, 2, 1, 11, 11, 0, DateTimeKind.Utc),
                            Title = "Notes from class"
                        },
                        new
                        {
                            MailId = 3,
                            Content = "Here are cheap flights i found:",
                            MailType = 0,
                            SenderId = 6,
                            TimeOfSending = new DateTime(2022, 9, 11, 9, 10, 0, 0, DateTimeKind.Utc),
                            Title = "Skyscanner"
                        },
                        new
                        {
                            MailId = 4,
                            Content = "Charge your phone before you leave!",
                            MailType = 0,
                            SenderId = 3,
                            TimeOfSending = new DateTime(2023, 1, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Reminder"
                        },
                        new
                        {
                            MailId = 5,
                            Content = "Here are my most listened artists this year: ...",
                            MailType = 0,
                            SenderId = 4,
                            TimeOfSending = new DateTime(2022, 11, 29, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Spotify"
                        },
                        new
                        {
                            MailId = 6,
                            EventDuration = new TimeSpan(1, 0, 0, 0, 0),
                            EventTime = new DateTime(2023, 1, 20, 15, 0, 0, 0, DateTimeKind.Utc),
                            MailType = 1,
                            SenderId = 2,
                            TimeOfSending = new DateTime(2022, 12, 18, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Karaoke night"
                        },
                        new
                        {
                            MailId = 7,
                            EventDuration = new TimeSpan(1, 0, 0, 0, 0),
                            EventTime = new DateTime(2023, 2, 20, 16, 0, 0, 0, DateTimeKind.Utc),
                            MailType = 1,
                            SenderId = 5,
                            TimeOfSending = new DateTime(2022, 12, 30, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Kate's Birthday"
                        },
                        new
                        {
                            MailId = 8,
                            EventDuration = new TimeSpan(0, 2, 0, 0, 0),
                            EventTime = new DateTime(2023, 1, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            MailType = 1,
                            SenderId = 2,
                            TimeOfSending = new DateTime(2023, 1, 13, 10, 0, 0, 0, DateTimeKind.Utc),
                            Title = "Coffee date"
                        },
                        new
                        {
                            MailId = 9,
                            EventDuration = new TimeSpan(4, 0, 0, 0, 0),
                            EventTime = new DateTime(2023, 7, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            MailType = 1,
                            SenderId = 4,
                            TimeOfSending = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            Title = "ConcertS in Italy"
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiverMail", b =>
                {
                    b.Property<int>("ReceiverId")
                        .HasColumnType("integer");

                    b.Property<int>("MailId")
                        .HasColumnType("integer");

                    b.Property<int?>("EventStatus")
                        .HasColumnType("integer");

                    b.Property<int?>("MailStatus")
                        .HasColumnType("integer");

                    b.HasKey("ReceiverId", "MailId");

                    b.HasIndex("MailId");

                    b.ToTable("Recipients", (string)null);

                    b.HasData(
                        new
                        {
                            ReceiverId = 3,
                            MailId = 3,
                            MailStatus = 0
                        },
                        new
                        {
                            ReceiverId = 4,
                            MailId = 2,
                            MailStatus = 1
                        },
                        new
                        {
                            ReceiverId = 2,
                            MailId = 1,
                            MailStatus = 0
                        },
                        new
                        {
                            ReceiverId = 1,
                            MailId = 6,
                            EventStatus = 1
                        },
                        new
                        {
                            ReceiverId = 3,
                            MailId = 7,
                            EventStatus = 2
                        },
                        new
                        {
                            ReceiverId = 6,
                            MailId = 8,
                            EventStatus = 0
                        },
                        new
                        {
                            ReceiverId = 2,
                            MailId = 8,
                            EventStatus = 0
                        },
                        new
                        {
                            ReceiverId = 2,
                            MailId = 9,
                            EventStatus = 0
                        },
                        new
                        {
                            ReceiverId = 1,
                            MailId = 9,
                            EventStatus = 2
                        },
                        new
                        {
                            ReceiverId = 3,
                            MailId = 4,
                            MailStatus = 0
                        },
                        new
                        {
                            ReceiverId = 6,
                            MailId = 5,
                            MailStatus = 1
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.SpamFlag", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("SpamUserId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "SpamUserId");

                    b.HasIndex("SpamUserId");

                    b.ToTable("SpamFlag", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            SpamUserId = 2
                        },
                        new
                        {
                            UserId = 1,
                            SpamUserId = 4
                        },
                        new
                        {
                            UserId = 2,
                            SpamUserId = 1
                        },
                        new
                        {
                            UserId = 3,
                            SpamUserId = 6
                        },
                        new
                        {
                            UserId = 4,
                            SpamUserId = 1
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("user_type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasDiscriminator<string>("user_type").HasValue("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mate.matic@gmail.com",
                            HashedPassword = new byte[] { 136, 217, 45, 158, 96, 78, 60, 167, 225, 206, 223, 229, 10, 78, 173, 192, 203, 28, 177, 49, 158, 111, 116, 155, 96, 209, 9, 108, 215, 5, 193, 244, 240, 245, 23, 124, 73, 190, 255, 76, 34, 121, 203, 210, 195, 182, 213, 43, 71, 179, 28, 162, 117, 8, 118, 207, 237, 11, 56, 78, 47, 74, 249, 165 }
                        },
                        new
                        {
                            Id = 2,
                            Email = "zeljana.zekic@gmail.com",
                            HashedPassword = new byte[] { 14, 88, 133, 150, 244, 225, 12, 160, 158, 151, 137, 51, 189, 193, 179, 152, 225, 245, 216, 8, 175, 133, 179, 187, 231, 29, 73, 84, 0, 218, 28, 209, 134, 58, 71, 41, 173, 43, 254, 120, 166, 159, 96, 146, 40, 18, 206, 93, 44, 63, 173, 225, 144, 123, 181, 191, 231, 63, 185, 114, 46, 110, 166, 133 }
                        },
                        new
                        {
                            Id = 3,
                            Email = "anitamilic01@dump.com",
                            HashedPassword = new byte[] { 90, 14, 108, 6, 51, 31, 77, 17, 250, 54, 218, 244, 128, 62, 48, 222, 167, 169, 108, 141, 157, 230, 95, 10, 29, 161, 237, 162, 76, 54, 240, 187, 82, 122, 137, 51, 162, 18, 141, 217, 227, 165, 151, 154, 39, 150, 20, 181, 195, 186, 135, 149, 159, 36, 148, 189, 189, 194, 35, 38, 126, 198, 81, 80 }
                        },
                        new
                        {
                            Id = 4,
                            Email = "ivo.ivic@gmail.com",
                            HashedPassword = new byte[] { 243, 229, 134, 23, 55, 7, 140, 0, 179, 203, 77, 192, 217, 176, 57, 240, 10, 158, 213, 112, 180, 148, 89, 194, 194, 77, 127, 210, 143, 89, 15, 36, 69, 69, 176, 95, 247, 50, 225, 99, 179, 44, 149, 182, 28, 97, 110, 96, 97, 196, 200, 207, 146, 146, 168, 35, 43, 66, 1, 22, 38, 48, 154, 85 }
                        },
                        new
                        {
                            Id = 5,
                            Email = "marko.caric@dump.com",
                            HashedPassword = new byte[] { 25, 37, 165, 158, 84, 162, 113, 119, 119, 133, 234, 52, 93, 167, 246, 54, 170, 205, 136, 40, 105, 183, 119, 123, 98, 150, 235, 177, 124, 92, 82, 39, 43, 133, 136, 129, 182, 194, 183, 249, 208, 138, 199, 47, 47, 244, 190, 13, 24, 104, 107, 189, 162, 111, 159, 122, 230, 8, 51, 113, 18, 76, 63, 90 }
                        },
                        new
                        {
                            Id = 6,
                            Email = "kate.bulj@gmail.com",
                            HashedPassword = new byte[] { 153, 107, 241, 175, 22, 229, 191, 104, 253, 123, 231, 87, 199, 12, 89, 160, 70, 204, 203, 194, 118, 159, 32, 110, 232, 106, 56, 21, 110, 139, 65, 117, 61, 111, 168, 185, 119, 91, 245, 123, 8, 234, 89, 199, 242, 252, 133, 163, 255, 199, 166, 152, 144, 220, 28, 159, 10, 32, 249, 33, 45, 6, 18, 186 }
                        });
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mail", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "Sender")
                        .WithMany("SentMail")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.ReceiverMail", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.Mail", "Mail")
                        .WithMany("Recipients")
                        .HasForeignKey("MailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DmailApp.Data.Entities.Models.User", "Receiver")
                        .WithMany("ReceivedMail")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mail");

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.SpamFlag", b =>
                {
                    b.HasOne("DmailApp.Data.Entities.Models.User", "SpamUser")
                        .WithMany()
                        .HasForeignKey("SpamUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DmailApp.Data.Entities.Models.User", "User")
                        .WithMany("SpamUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpamUser");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.Mail", b =>
                {
                    b.Navigation("Recipients");
                });

            modelBuilder.Entity("DmailApp.Data.Entities.Models.User", b =>
                {
                    b.Navigation("ReceivedMail");

                    b.Navigation("SentMail");

                    b.Navigation("SpamUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
